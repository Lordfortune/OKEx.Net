using CryptoExchange.Net.Objects;
using Okex.Net.Enums;
using Okex.Net.RestObjects;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Okex.Net.Interfaces
{
    public interface IOkexClientSwap
    {
        WebCallResult<OkexSwapAlgoCancelledOrder> Swap_AlgoCancelOrder(string symbol, OkexAlgoOrderType type, IEnumerable<long> algo_ids, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapAlgoCancelledOrder>> Swap_AlgoCancelOrder_Async(string symbol, OkexAlgoOrderType type, IEnumerable<long> algo_ids, CancellationToken ct = default);
        WebCallResult<IEnumerable<OkexSwapAlgoOrder>> Swap_AlgoGetOrders(string symbol, OkexAlgoOrderType type, OkexAlgoStatus? status = null, IEnumerable<long> algo_ids = null, int limit = 100, long? before = null, long? after = null, CancellationToken ct = default);
        Task<WebCallResult<IEnumerable<OkexSwapAlgoOrder>>> Swap_AlgoGetOrders_Async(string symbol, OkexAlgoOrderType type, OkexAlgoStatus? status = null, IEnumerable<long> algo_ids = null, int limit = 100, long? before = null, long? after = null, CancellationToken ct = default);
        WebCallResult<OkexSwapAlgoPlacedOrder> Swap_AlgoPlaceOrder(string symbol, OkexSwapOrderType type, OkexAlgoOrderType order_type, decimal size, decimal? trigger_price = null, decimal? trigger_algo_price = null, OkexAlgoPriceType? trigger_algo_type = null, decimal? trail_callback_rate = null, decimal? trail_trigger_price = null, decimal? iceberg_algo_variance = null, decimal? iceberg_avg_amount = null, decimal? iceberg_limit_price = null, decimal? twap_sweep_range = null, decimal? twap_sweep_ratio = null, int? twap_single_limit = null, decimal? twap_price_limit = null, int? twap_time_interval = null, OkexAlgoPriceType? tp_trigger_type = null, decimal? tp_trigger_price = null, decimal? tp_price = null, OkexAlgoPriceType? sl_trigger_type = null, decimal? sl_trigger_price = null, decimal? sl_price = null, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapAlgoPlacedOrder>> Swap_AlgoPlaceOrder_Async(string symbol, OkexSwapOrderType type, OkexAlgoOrderType order_type, decimal size, decimal? trigger_price = null, decimal? trigger_algo_price = null, OkexAlgoPriceType? trigger_algo_type = null, decimal? trail_callback_rate = null, decimal? trail_trigger_price = null, decimal? iceberg_algo_variance = null, decimal? iceberg_avg_amount = null, decimal? iceberg_limit_price = null, decimal? twap_sweep_range = null, decimal? twap_sweep_ratio = null, int? twap_single_limit = null, decimal? twap_price_limit = null, int? twap_time_interval = null, OkexAlgoPriceType? tp_trigger_type = null, decimal? tp_trigger_price = null, decimal? tp_price = null, OkexAlgoPriceType? sl_trigger_type = null, decimal? sl_trigger_price = null, decimal? sl_price = null, CancellationToken ct = default);
        WebCallResult<OkexSwapBatchOrders> Swap_BatchCancelOrders(string symbol, IEnumerable<long> orderIds, IEnumerable<string> clientOrderIds, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapBatchOrders>> Swap_BatchCancelOrders_Async(string symbol, IEnumerable<long> orderIds, IEnumerable<string> clientOrderIds, CancellationToken ct = default);
        WebCallResult<OkexSwapBatchPlacedOrder> Swap_BatchModifyOrders(string symbol, IEnumerable<OkexSwapModifyOrder> orders, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapBatchPlacedOrder>> Swap_BatchModifyOrders_Async(string symbol, IEnumerable<OkexSwapModifyOrder> orders, CancellationToken ct = default);
        WebCallResult<OkexSwapBatchPlacedOrder> Swap_BatchPlaceOrders(string symbol, IEnumerable<OkexSwapPlaceOrder> orders, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapBatchPlacedOrder>> Swap_BatchPlaceOrders_Async(string symbol, IEnumerable<OkexSwapPlaceOrder> orders, CancellationToken ct = default);
        WebCallResult<OkexSwapDirectionResponse> Swap_CancelAll(string symbol, OkexSwapDirection direction, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapDirectionResponse>> Swap_CancelAll_Async(string symbol, OkexSwapDirection direction, CancellationToken ct = default);
        WebCallResult<OkexSwapPlacedOrder> Swap_CancelOrder(string symbol, long? orderId = null, string? clientOrderId = null, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapPlacedOrder>> Swap_CancelOrder_Async(string symbol, long? orderId = null, string? clientOrderId = null, CancellationToken ct = default);
        WebCallResult<OkexSwapOrderList> Swap_GetAllOrders(string symbol, OkexSwapOrderState state, int limit = 100, long? before = null, long? after = null, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapOrderList>> Swap_GetAllOrders_Async(string symbol, OkexSwapOrderState state, int limit = 100, long? before = null, long? after = null, CancellationToken ct = default);
        WebCallResult<IEnumerable<OkexSwapTicker>> Swap_GetAllTickers(CancellationToken ct = default);
        Task<WebCallResult<IEnumerable<OkexSwapTicker>>> Swap_GetAllTickers_Async(CancellationToken ct = default);
        WebCallResult<OkexSwapBalances> Swap_GetBalances(CancellationToken ct = default);
        WebCallResult<OkexSwapBalanceOfSymbol> Swap_GetBalances(string symbol, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapBalances>> Swap_GetBalances_Async(CancellationToken ct = default);
        Task<WebCallResult<OkexSwapBalanceOfSymbol>> Swap_GetBalances_Async(string symbol, CancellationToken ct = default);
        WebCallResult<IEnumerable<OkexSwapBill>> Swap_GetBills(string symbol, OkexSwapBillType? type = null, int limit = 100, long? before = null, long? after = null, CancellationToken ct = default);
        Task<WebCallResult<IEnumerable<OkexSwapBill>>> Swap_GetBills_Async(string symbol, OkexSwapBillType? type = null, int limit = 100, long? before = null, long? after = null, CancellationToken ct = default);
        WebCallResult<IEnumerable<OkexSwapCandle>> Swap_GetCandles(string symbol, OkexSpotPeriod period, DateTime? start = null, DateTime? end = null, CancellationToken ct = default);
        Task<WebCallResult<IEnumerable<OkexSwapCandle>>> Swap_GetCandles_Async(string symbol, OkexSpotPeriod period, DateTime? start = null, DateTime? end = null, CancellationToken ct = default);
        WebCallResult<OkexSwapRate> Swap_GetFiatExchangeRates(CancellationToken ct = default);
        Task<WebCallResult<OkexSwapRate>> Swap_GetFiatExchangeRates_Async(CancellationToken ct = default);
        WebCallResult<IEnumerable<OkexSwapFundingRate>> Swap_GetFundingRateHistory(string symbol, int limit = 100, CancellationToken ct = default);
        Task<WebCallResult<IEnumerable<OkexSwapFundingRate>>> Swap_GetFundingRateHistory_Async(string symbol, int limit = 100, CancellationToken ct = default);
        WebCallResult<IEnumerable<OkexSwapCandle>> Swap_GetHistoricalMarketData(string symbol, OkexSpotPeriod period, DateTime? start = null, DateTime? end = null, int limit = 300, CancellationToken ct = default);
        Task<WebCallResult<IEnumerable<OkexSwapCandle>>> Swap_GetHistoricalMarketData_Async(string symbol, OkexSpotPeriod period, DateTime? start = null, DateTime? end = null, int limit = 300, CancellationToken ct = default);
        WebCallResult<OkexSwapHoldAmount> Swap_GetHoldAmount(string symbol, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapHoldAmount>> Swap_GetHoldAmount_Async(string symbol, CancellationToken ct = default);
        WebCallResult<OkexSwapIndex> Swap_GetIndices(string symbol, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapIndex>> Swap_GetIndices_Async(string symbol, CancellationToken ct = default);
        WebCallResult<OkexSwapLeverage> Swap_GetLeverage(string symbol, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapLeverage>> Swap_GetLeverage_Async(string symbol, CancellationToken ct = default);
        WebCallResult<IEnumerable<OkexSwapLiquidatedOrder>> Swap_GetLiquidatedOrders(string symbol, OkexSwapLiquidationStatus status, int limit = 100, long? from = null, long? to = null, CancellationToken ct = default);
        Task<WebCallResult<IEnumerable<OkexSwapLiquidatedOrder>>> Swap_GetLiquidatedOrders_Async(string symbol, OkexSwapLiquidationStatus status, int limit = 100, long? from = null, long? to = null, CancellationToken ct = default);
        WebCallResult<OkexSwapMarkPrice> Swap_GetMarkPrice(string symbol, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapMarkPrice>> Swap_GetMarkPrice_Async(string symbol, CancellationToken ct = default);
        WebCallResult<OkexSwapSettlementTime> Swap_GetNextSettlementTime(string symbol, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapSettlementTime>> Swap_GetNextSettlementTime_Async(string symbol, CancellationToken ct = default);
        WebCallResult<OkexSwapInterest> Swap_GetOpenInterests(string symbol, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapInterest>> Swap_GetOpenInterests_Async(string symbol, CancellationToken ct = default);
        WebCallResult<OkexSwapOrderBook> Swap_GetOrderBook(string symbol, int? size = null, decimal? depth = null, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapOrderBook>> Swap_GetOrderBook_Async(string symbol, int? size = null, decimal? depth = null, CancellationToken ct = default);
        WebCallResult<OkexSwapOrder> Swap_GetOrderDetails(string symbol, long? orderId = null, string? clientOrderId = null, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapOrder>> Swap_GetOrderDetails_Async(string symbol, long? orderId = null, string? clientOrderId = null, CancellationToken ct = default);
        WebCallResult<IEnumerable<OkexSwapPosition>> Swap_GetPositions(CancellationToken ct = default);
        WebCallResult<OkexSwapPosition> Swap_GetPositions(string symbol, CancellationToken ct = default);
        Task<WebCallResult<IEnumerable<OkexSwapPosition>>> Swap_GetPositions_Async(CancellationToken ct = default);
        Task<WebCallResult<OkexSwapPosition>> Swap_GetPositions_Async(string symbol, CancellationToken ct = default);
        WebCallResult<OkexSwapPriceRange> Swap_GetPriceLimit(string symbol, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapPriceRange>> Swap_GetPriceLimit_Async(string symbol, CancellationToken ct = default);
        WebCallResult<OkexSwapTicker> Swap_GetSymbolTicker(string symbol, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapTicker>> Swap_GetSymbolTicker_Async(string symbol, CancellationToken ct = default);
        WebCallResult<OkexSwapTradeFee> Swap_GetTradeFeeRates(string? symbol = null, int? category = null, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapTradeFee>> Swap_GetTradeFeeRates_Async(string? symbol = null, int? category = null, CancellationToken ct = default);
        WebCallResult<IEnumerable<OkexSwapTrade>> Swap_GetTrades(string symbol, int limit = 100, long? before = null, long? after = null, CancellationToken ct = default);
        Task<WebCallResult<IEnumerable<OkexSwapTrade>>> Swap_GetTrades_Async(string symbol, int limit = 100, long? before = null, long? after = null, CancellationToken ct = default);
        WebCallResult<IEnumerable<OkexSwapContract>> Swap_GetTradingContracts(CancellationToken ct = default);
        Task<WebCallResult<IEnumerable<OkexSwapContract>>> Swap_GetTradingContracts_Async(CancellationToken ct = default);
        WebCallResult<IEnumerable<OkexSwapTransaction>> Swap_GetTransactionDetails(string symbol, long? orderId = null, int limit = 100, long? before = null, long? after = null, CancellationToken ct = default);
        Task<WebCallResult<IEnumerable<OkexSwapTransaction>>> Swap_GetTransactionDetails_Async(string symbol, long? orderId = null, int limit = 100, long? before = null, long? after = null, CancellationToken ct = default);
        WebCallResult<OkexSwapDirectionResponse> Swap_MarketCloseAll(string symbol, OkexSwapDirection direction, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapDirectionResponse>> Swap_MarketCloseAll_Async(string symbol, OkexSwapDirection direction, CancellationToken ct = default);
        WebCallResult<OkexSwapPlacedOrder> Swap_ModifyOrder(string symbol, long? orderId = null, string? clientOrderId = null, string? requestId = null, decimal? newSize = null, decimal? newPrice = null, bool? cancelOnFail = null, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapPlacedOrder>> Swap_ModifyOrder_Async(string symbol, long? orderId = null, string? clientOrderId = null, string? requestId = null, decimal? newSize = null, decimal? newPrice = null, bool? cancelOnFail = null, CancellationToken ct = default);
        WebCallResult<OkexSwapPlacedOrder> Swap_PlaceOrder(string symbol, OkexSwapOrderType type, decimal size, OkexSwapTimeInForce timeInForce = OkexSwapTimeInForce.NormalOrder, decimal? price = null, bool match_price = false, string? clientOrderId = null, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapPlacedOrder>> Swap_PlaceOrder_Async(string symbol, OkexSwapOrderType type, decimal size, OkexSwapTimeInForce timeInForce = OkexSwapTimeInForce.NormalOrder, decimal? price = null, bool match_price = false, string? clientOrderId = null, CancellationToken ct = default);
        WebCallResult<OkexSwapLeverage> Swap_SetLeverage(string symbol, OkexSwapLeverageSide side, int leverage, CancellationToken ct = default);
        Task<WebCallResult<OkexSwapLeverage>> Swap_SetLeverage_Async(string symbol, OkexSwapLeverageSide side, int leverage, CancellationToken ct = default);
    }
}