using Newtonsoft.Json;
using Okex.Net.Converters;
using Okex.Net.Enums;
using System;

namespace Okex.Net.RestObjects
{
    public class OkexSwapBill
    {
        /// <summary>
        /// ID of the bill record
        /// </summary>
        [JsonProperty("ledger_id")]
        public long LedgerId { get; set; }

        /// <summary>
        /// Token, e.g. 'btc'
        /// </summary>
        [JsonProperty("currency")]
        public string Currency { get; set; } = "";

        /// <summary>
        /// Contract ID
        /// </summary>
        [JsonProperty("instrument_id")]
        public string Symbol { get; set; } = "";

        /// <summary>
        /// Amount
        /// </summary>
        [JsonProperty("amount")]
        public decimal Amount { get; set; }

        /// <summary>
        /// Balance of positions opened. Balance positive if the open interest is long while negative if short. The balance will be '0' if the type is fee.
        /// </summary>
        [JsonProperty("balance")]
        public decimal Balance { get; set; }

        /// <summary>
        /// Transaction Fee
        /// </summary>
        [JsonProperty("fee")]
        public decimal Fee { get; set; }

        /// <summary>
        /// Type of bill record
        /// </summary>
        [JsonProperty("type"), JsonConverter(typeof(SwapBillTypeConverter))]
        public OkexSwapBillType Type { get; set; }

        /// <summary>
        /// Bill creation time
        /// </summary>
        [JsonProperty("timestamp")]
        public DateTime Timestamp { get; set; }

        /// <summary>
        /// If the type is generated by transaction, the order_id and instrument_id will be included in details,If the type is generated by transfer, the from and to will be included in details
        /// </summary>
        [JsonProperty("details")]
        public OkexSwapBillDetails Details { get; set; } = new OkexSwapBillDetails();
    }

    public class OkexSwapBillDetails
    {
        /// <summary>
        /// Order ID
        /// </summary>
        [JsonProperty("order_id")]
        public long? OrderId { get; set; }

        /// <summary>
        /// Contract ID, e.g.BTC-USD-SWAP,BTC-USDT-SWAP
        /// </summary>
        [JsonProperty("instrument_id")]
        public string Symbol { get; set; } = "";

    }
}
